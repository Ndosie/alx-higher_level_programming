============================
How to use 4-print_square.py
============================

This library has only one function ``print_square(size)``. Which prints
`#` in square shape according to `size`.

Numbers
=======

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(3)
	###
	###
	###

Passing size zero it will print empty string

::

	>>> print_square(0)
	<BLANKLINE>

Passing size less than zero it will raise ValueError

::

	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

Non Numbers
===========
Passing non integer values it will raise TypeError

::

	>>> print_square('3')
	Traceback (most recent call last):
	TypeError: size must be an integer

Passing no arguments it will raise TypeError

::

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'
